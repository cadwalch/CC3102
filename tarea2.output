Grammar

    0 $accept: line_list END_OF_FILE

    1 line_list: ε
    2          | line_list line

    3 line: '\n'
    4     | expr '\n'
    5     | expr END_OF_FILE

    6 expr: nexpr
    7     | bexpr
    8     | sexpr

    9 nexpr: INT
   10      | '(' nexpr ')'
   11      | '(' '-' nexpr ')'
   12      | '(' nexpr '+' nexpr ')'
   13      | '(' nexpr '*' nexpr ')'
   14      | '|' sexpr '|'
   15      | '(' IF bexpr nexpr nexpr ')'

   16 bexpr: TRUE
   17      | FALSE
   18      | '(' nexpr '<' nexpr ')'
   19      | '(' nexpr '=' nexpr ')'
   20      | '(' NOT bexpr ')'
   21      | '(' bexpr AND bexpr ')'
   22      | '(' IF bexpr bexpr bexpr ')'

   23 sexpr: '(' STRING ')'
   24      | '(' sexpr '.' sexpr ')'
   25      | '(' IF bexpr sexpr sexpr ')'


Terminals, with rules where they appear

    END_OF_FILE (0) 0 5
    '\n' (10) 3 4
    '(' (40) 10 11 12 13 15 18 19 20 21 22 23 24 25
    ')' (41) 10 11 12 13 15 18 19 20 21 22 23 24 25
    '*' (42) 13
    '+' (43) 12
    '-' (45) 11
    '.' (46) 24
    '<' (60) 18
    '=' (61) 19
    '|' (124) 14
    error (256)
    INT <num> (258) 9
    TRUE <boolv> (259) 16
    FALSE <boolv> (260) 17
    STRING <str> (261) 23
    AND (262) 21
    NOT (263) 20
    IF (264) 15 22 25


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    line_list (21)
        on left: 1 2
        on right: 0 2
    line (22)
        on left: 3 4 5
        on right: 2
    expr (23)
        on left: 6 7 8
        on right: 4 5
    nexpr <num> (24)
        on left: 9 10 11 12 13 14 15
        on right: 6 10 11 12 13 15 18 19
    bexpr <boolv> (25)
        on left: 16 17 18 19 20 21 22
        on right: 7 15 20 21 22 25
    sexpr <str> (26)
        on left: 23 24 25
        on right: 8 14 24 25


State 0

    0 $accept: • line_list END_OF_FILE

    $default  reduce using rule 1 (line_list)

    line_list  go to state 1


State 1

    0 $accept: line_list • END_OF_FILE
    2 line_list: line_list • line

    END_OF_FILE  shift, and go to state 2
    INT          shift, and go to state 3
    TRUE         shift, and go to state 4
    FALSE        shift, and go to state 5
    '\n'         shift, and go to state 6
    '('          shift, and go to state 7
    '|'          shift, and go to state 8

    line   go to state 9
    expr   go to state 10
    nexpr  go to state 11
    bexpr  go to state 12
    sexpr  go to state 13


State 2

    0 $accept: line_list END_OF_FILE •

    $default  accept


State 3

    9 nexpr: INT •

    $default  reduce using rule 9 (nexpr)


State 4

   16 bexpr: TRUE •

    $default  reduce using rule 16 (bexpr)


State 5

   17 bexpr: FALSE •

    $default  reduce using rule 17 (bexpr)


State 6

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 7

   10 nexpr: '(' • nexpr ')'
   11      | '(' • '-' nexpr ')'
   12      | '(' • nexpr '+' nexpr ')'
   13      | '(' • nexpr '*' nexpr ')'
   15      | '(' • IF bexpr nexpr nexpr ')'
   18 bexpr: '(' • nexpr '<' nexpr ')'
   19      | '(' • nexpr '=' nexpr ')'
   20      | '(' • NOT bexpr ')'
   21      | '(' • bexpr AND bexpr ')'
   22      | '(' • IF bexpr bexpr bexpr ')'
   23 sexpr: '(' • STRING ')'
   24      | '(' • sexpr '.' sexpr ')'
   25      | '(' • IF bexpr sexpr sexpr ')'

    INT     shift, and go to state 3
    TRUE    shift, and go to state 4
    FALSE   shift, and go to state 5
    STRING  shift, and go to state 14
    NOT     shift, and go to state 15
    IF      shift, and go to state 16
    '('     shift, and go to state 7
    '-'     shift, and go to state 17
    '|'     shift, and go to state 8

    nexpr  go to state 18
    bexpr  go to state 19
    sexpr  go to state 20


State 8

   14 nexpr: '|' • sexpr '|'

    '('  shift, and go to state 21

    sexpr  go to state 22


State 9

    2 line_list: line_list line •

    $default  reduce using rule 2 (line_list)


State 10

    4 line: expr • '\n'
    5     | expr • END_OF_FILE

    END_OF_FILE  shift, and go to state 23
    '\n'         shift, and go to state 24


State 11

    6 expr: nexpr •

    $default  reduce using rule 6 (expr)


State 12

    7 expr: bexpr •

    $default  reduce using rule 7 (expr)


State 13

    8 expr: sexpr •

    $default  reduce using rule 8 (expr)


State 14

   23 sexpr: '(' STRING • ')'

    ')'  shift, and go to state 25


State 15

   20 bexpr: '(' NOT • bexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 27


State 16

   15 nexpr: '(' IF • bexpr nexpr nexpr ')'
   22 bexpr: '(' IF • bexpr bexpr bexpr ')'
   25 sexpr: '(' IF • bexpr sexpr sexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 28


State 17

   11 nexpr: '(' '-' • nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 30


State 18

   10 nexpr: '(' nexpr • ')'
   12      | '(' nexpr • '+' nexpr ')'
   13      | '(' nexpr • '*' nexpr ')'
   18 bexpr: '(' nexpr • '<' nexpr ')'
   19      | '(' nexpr • '=' nexpr ')'

    ')'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '<'  shift, and go to state 34
    '='  shift, and go to state 35


State 19

   21 bexpr: '(' bexpr • AND bexpr ')'

    AND  shift, and go to state 36


State 20

   24 sexpr: '(' sexpr • '.' sexpr ')'

    '.'  shift, and go to state 37


State 21

   23 sexpr: '(' • STRING ')'
   24      | '(' • sexpr '.' sexpr ')'
   25      | '(' • IF bexpr sexpr sexpr ')'

    STRING  shift, and go to state 14
    IF      shift, and go to state 38
    '('     shift, and go to state 21

    sexpr  go to state 20


State 22

   14 nexpr: '|' sexpr • '|'

    '|'  shift, and go to state 39


State 23

    5 line: expr END_OF_FILE •

    $default  reduce using rule 5 (line)


State 24

    4 line: expr '\n' •

    $default  reduce using rule 4 (line)


State 25

   23 sexpr: '(' STRING ')' •

    $default  reduce using rule 23 (sexpr)


State 26

   18 bexpr: '(' • nexpr '<' nexpr ')'
   19      | '(' • nexpr '=' nexpr ')'
   20      | '(' • NOT bexpr ')'
   21      | '(' • bexpr AND bexpr ')'
   22      | '(' • IF bexpr bexpr bexpr ')'

    INT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    NOT    shift, and go to state 15
    IF     shift, and go to state 40
    '('    shift, and go to state 41
    '|'    shift, and go to state 8

    nexpr  go to state 42
    bexpr  go to state 19


State 27

   20 bexpr: '(' NOT bexpr • ')'

    ')'  shift, and go to state 43


State 28

   15 nexpr: '(' IF bexpr • nexpr nexpr ')'
   22 bexpr: '(' IF bexpr • bexpr bexpr ')'
   25 sexpr: '(' IF bexpr • sexpr sexpr ')'

    INT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 7
    '|'    shift, and go to state 8

    nexpr  go to state 44
    bexpr  go to state 45
    sexpr  go to state 46


State 29

   10 nexpr: '(' • nexpr ')'
   11      | '(' • '-' nexpr ')'
   12      | '(' • nexpr '+' nexpr ')'
   13      | '(' • nexpr '*' nexpr ')'
   15      | '(' • IF bexpr nexpr nexpr ')'

    INT  shift, and go to state 3
    IF   shift, and go to state 47
    '('  shift, and go to state 29
    '-'  shift, and go to state 17
    '|'  shift, and go to state 8

    nexpr  go to state 48


State 30

   11 nexpr: '(' '-' nexpr • ')'

    ')'  shift, and go to state 49


State 31

   10 nexpr: '(' nexpr ')' •

    $default  reduce using rule 10 (nexpr)


State 32

   12 nexpr: '(' nexpr '+' • nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 50


State 33

   13 nexpr: '(' nexpr '*' • nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 51


State 34

   18 bexpr: '(' nexpr '<' • nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 52


State 35

   19 bexpr: '(' nexpr '=' • nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 53


State 36

   21 bexpr: '(' bexpr AND • bexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 54


State 37

   24 sexpr: '(' sexpr '.' • sexpr ')'

    '('  shift, and go to state 21

    sexpr  go to state 55


State 38

   25 sexpr: '(' IF • bexpr sexpr sexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 56


State 39

   14 nexpr: '|' sexpr '|' •

    $default  reduce using rule 14 (nexpr)


State 40

   22 bexpr: '(' IF • bexpr bexpr bexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 57


State 41

   10 nexpr: '(' • nexpr ')'
   11      | '(' • '-' nexpr ')'
   12      | '(' • nexpr '+' nexpr ')'
   13      | '(' • nexpr '*' nexpr ')'
   15      | '(' • IF bexpr nexpr nexpr ')'
   18 bexpr: '(' • nexpr '<' nexpr ')'
   19      | '(' • nexpr '=' nexpr ')'
   20      | '(' • NOT bexpr ')'
   21      | '(' • bexpr AND bexpr ')'
   22      | '(' • IF bexpr bexpr bexpr ')'

    INT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    NOT    shift, and go to state 15
    IF     shift, and go to state 58
    '('    shift, and go to state 41
    '-'    shift, and go to state 17
    '|'    shift, and go to state 8

    nexpr  go to state 18
    bexpr  go to state 19


State 42

   18 bexpr: '(' nexpr • '<' nexpr ')'
   19      | '(' nexpr • '=' nexpr ')'

    '<'  shift, and go to state 34
    '='  shift, and go to state 35


State 43

   20 bexpr: '(' NOT bexpr ')' •

    $default  reduce using rule 20 (bexpr)


State 44

   15 nexpr: '(' IF bexpr nexpr • nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 59


State 45

   22 bexpr: '(' IF bexpr bexpr • bexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 60


State 46

   25 sexpr: '(' IF bexpr sexpr • sexpr ')'

    '('  shift, and go to state 21

    sexpr  go to state 61


State 47

   15 nexpr: '(' IF • bexpr nexpr nexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 62


State 48

   10 nexpr: '(' nexpr • ')'
   12      | '(' nexpr • '+' nexpr ')'
   13      | '(' nexpr • '*' nexpr ')'

    ')'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33


State 49

   11 nexpr: '(' '-' nexpr ')' •

    $default  reduce using rule 11 (nexpr)


State 50

   12 nexpr: '(' nexpr '+' nexpr • ')'

    ')'  shift, and go to state 63


State 51

   13 nexpr: '(' nexpr '*' nexpr • ')'

    ')'  shift, and go to state 64


State 52

   18 bexpr: '(' nexpr '<' nexpr • ')'

    ')'  shift, and go to state 65


State 53

   19 bexpr: '(' nexpr '=' nexpr • ')'

    ')'  shift, and go to state 66


State 54

   21 bexpr: '(' bexpr AND bexpr • ')'

    ')'  shift, and go to state 67


State 55

   24 sexpr: '(' sexpr '.' sexpr • ')'

    ')'  shift, and go to state 68


State 56

   25 sexpr: '(' IF bexpr • sexpr sexpr ')'

    '('  shift, and go to state 21

    sexpr  go to state 46


State 57

   22 bexpr: '(' IF bexpr • bexpr bexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 45


State 58

   15 nexpr: '(' IF • bexpr nexpr nexpr ')'
   22 bexpr: '(' IF • bexpr bexpr bexpr ')'

    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 26

    bexpr  go to state 69


State 59

   15 nexpr: '(' IF bexpr nexpr nexpr • ')'

    ')'  shift, and go to state 70


State 60

   22 bexpr: '(' IF bexpr bexpr bexpr • ')'

    ')'  shift, and go to state 71


State 61

   25 sexpr: '(' IF bexpr sexpr sexpr • ')'

    ')'  shift, and go to state 72


State 62

   15 nexpr: '(' IF bexpr • nexpr nexpr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 29
    '|'  shift, and go to state 8

    nexpr  go to state 44


State 63

   12 nexpr: '(' nexpr '+' nexpr ')' •

    $default  reduce using rule 12 (nexpr)


State 64

   13 nexpr: '(' nexpr '*' nexpr ')' •

    $default  reduce using rule 13 (nexpr)


State 65

   18 bexpr: '(' nexpr '<' nexpr ')' •

    $default  reduce using rule 18 (bexpr)


State 66

   19 bexpr: '(' nexpr '=' nexpr ')' •

    $default  reduce using rule 19 (bexpr)


State 67

   21 bexpr: '(' bexpr AND bexpr ')' •

    $default  reduce using rule 21 (bexpr)


State 68

   24 sexpr: '(' sexpr '.' sexpr ')' •

    $default  reduce using rule 24 (sexpr)


State 69

   15 nexpr: '(' IF bexpr • nexpr nexpr ')'
   22 bexpr: '(' IF bexpr • bexpr bexpr ')'

    INT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 41
    '|'    shift, and go to state 8

    nexpr  go to state 44
    bexpr  go to state 45


State 70

   15 nexpr: '(' IF bexpr nexpr nexpr ')' •

    $default  reduce using rule 15 (nexpr)


State 71

   22 bexpr: '(' IF bexpr bexpr bexpr ')' •

    $default  reduce using rule 22 (bexpr)


State 72

   25 sexpr: '(' IF bexpr sexpr sexpr ')' •

    $default  reduce using rule 25 (sexpr)
